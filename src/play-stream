#!/bin/sh
# Play media streams with mplayer.

progname="$(basename "$0")"

stream_db="${XDG_CONFIG_HOME:-$HOME/.config}/streams"
mkdir -p "$(dirname "$stream_db")" || exit
touch "$stream_db" || exit	# must exist

usage () {
    cat <<EOF
Usage: $progname [OPTIONS] [--] STREAM [MPLAYER_OPTIONS]
Play media streams with mplayer.

Options:
 -l    --list      list known streams
       --help      show this help and exit

Using streams file: $stream_db

Each line in this file must have two space-separated fields,
specifying a stream name and a URI respectively.
Comment character is '#'.

EOF
}

error () {
    # print $1 to stderr
    printf "%s: %s\n" "$progname" "$1" 1>&2
}

is_playlist () {
    # true if $1 is a playlist url
    printf "%s" "$1" | grep -q -i '\.\(pls\|m3u\)$'
}

play_stream () {
    # play $1, other arguments are passed to mplayer
    stream="$1"
    shift
    if is_playlist "$stream"; then
	mplayer "$@" --playlist="$stream"
    else
	mplayer "$@" "$stream"
    fi
}

stream_uri () {
    # return stream uri for stream $1
    awk -v name="$1" '/[^#[:blank:]]/ {sub(/#.*/, "")}; $1 == name {print $2}'
}

streams () {
    # display stream names
    awk '/[^#[:blank:]]/ {sub(/#.*/, ""); print $1}'
}

# command line arguments
getopt -T 2> /dev/null
if [ $? -ne 4 ]; then
    error "unsupported version of getopt"
    exit 1
fi

short_opts=l
long_opts=list,help
args="$(LC_ALL=C getopt -n "$progname" -s sh -o $short_opts -l $long_opts -- "$@")"
if [ $? -eq 0 ]; then
    eval set -- "$args"
else
    exit 1
fi

while [ $# -gt 0 ]; do
    case "$1" in
	--help)
	    usage
	    exit;;
	-l|--list)
	    streams < "$stream_db" | sort | fmt
	    exit;;
	--)
	    shift; break;;
	*)
	    break;;
    esac
    shift
done

if [ $# -lt 1 ]; then
    error "non-option argument required"
    exit 1
fi
stream_name="$1"
shift

# get uri
uri="$(stream_uri "$stream_name" < "$stream_db")"

if [ -z "$uri" ]; then
    if ! streams < "$stream_db" \
	    | grep "$stream_name" > /dev/null; then
	error "no such stream: $stream_name"
    else
	error "stream has no URI: $stream_name"
    fi
    exit 1
fi

# play stream
printf "opening stream %s ...\n" "$uri"
play_stream "$uri" "$@"
